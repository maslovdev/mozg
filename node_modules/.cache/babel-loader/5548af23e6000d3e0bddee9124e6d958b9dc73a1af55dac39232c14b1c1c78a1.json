{"ast":null,"code":"var _jsxFileName = \"D:\\\\mozgapp_0.4\\\\front\\\\src\\\\Components\\\\ChatApp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// import axios from 'axios';\nimport \"./main.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatApp = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const loadMessages = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/api/messages/');\n      setMessages(response.data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (message.trim() === '') return;\n    const newMessage = {\n      text: message,\n      loading: true\n    };\n    setMessages(prev => [...prev, {\n      original_text: newMessage.text,\n      processed_text: newMessage.text\n    }]);\n    try {\n      const response = await axios.post('http://localhost:8000/api/messages/', newMessage);\n      setMessages(prev => [...prev.slice(0, -1), response.data]);\n      setMessages(prevMessages => prevMessages.map((msg, index) => index === prevMessages.length - 1 ? {\n        text: data.message,\n        loading: false\n      } : msg));\n    } catch (error) {\n      console.error('Error sending message:', error);\n    } finally {\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u043D\\u0435\\u0442 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: msg.loading ? 'загрузка...' : msg.processed_text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onKeyPress: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatApp, \"R9cL6wTFJ4Cm4nINx8rfDHzMChE=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatApp","_s","message","setMessage","messages","setMessages","loadMessages","response","get","data","error","console","handleSubmit","e","preventDefault","trim","newMessage","text","loading","prev","original_text","processed_text","post","slice","prevMessages","map","msg","index","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","onKeyPress","handleKeyPress","onClick","sendMessage","_c","$RefreshReg$"],"sources":["D:/mozgapp_0.4/front/src/Components/ChatApp.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n// import axios from 'axios';\r\nimport \"./main.css\";\r\nimport axios from 'axios';\r\n\r\nconst ChatApp = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const loadMessages = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8000/api/messages/');\r\n      setMessages(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching messages:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (message.trim() === '') return;\r\n\r\n    const newMessage = { text: message, loading: true };\r\n    setMessages(prev => [...prev, { original_text: newMessage.text, processed_text: newMessage.text }]);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/api/messages/', newMessage);\r\n      setMessages(prev => [...prev.slice(0, -1), response.data]);\r\n      setMessages((prevMessages) =>\r\n        prevMessages.map((msg, index) =>\r\n          index === prevMessages.length - 1 ? { text: data.message, loading: false } : msg\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    } finally {\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className='App'>\r\n      {messages.length === 0 ? (\r\n        <p>нет сообщений</p>\r\n      ) : (\r\n        <ul>\r\n          {messages.map((msg, index) => (\r\n            <li key={index}>\r\n              {msg.loading ? 'загрузка...' : msg.processed_text}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <input\r\n        type='text'\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        onKeyPress={handleKeyPress}\r\n      />\r\n      <button onClick={sendMessage}>Отправить</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}